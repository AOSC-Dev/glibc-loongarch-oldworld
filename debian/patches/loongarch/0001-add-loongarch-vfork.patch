From 94632375da2e8992b840c74e82bd1ce974432aa4 Mon Sep 17 00:00:00 2001
From: caiyinyu <caiyinyu@loongson.cn>
Date: Wed, 27 Jan 2021 21:05:25 +0800
Subject: [PATCH] add loongarch vfork

Change-Id: Ib14a1b14aaf6c03929697780d8e4b1b5cc4c6e61
---
 sysdeps/unix/sysv/linux/loongarch/vfork.S | 49 +++++++++++++++++++++++
 1 file changed, 49 insertions(+)
 create mode 100644 sysdeps/unix/sysv/linux/loongarch/vfork.S

diff --git a/sysdeps/unix/sysv/linux/loongarch/vfork.S b/sysdeps/unix/sysv/linux/loongarch/vfork.S
new file mode 100644
index 0000000000..42e6d7996a
--- /dev/null
+++ b/sysdeps/unix/sysv/linux/loongarch/vfork.S
@@ -0,0 +1,49 @@
+/* Copyright (C) 1999-2018 Free Software Foundation, Inc.
+          
+   This file is part of the GNU C Library.
+          
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public License as
+   published by the Free Software Foundation; either version 2.1 of the
+   License, or (at your option) any later version.
+          
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+          
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <http://www.gnu.org/licenses/>.  */
+          
+#include <sysdep.h>
+#define _ERRNO_H    1
+#include <bits/errno.h>
+          
+/* Clone the calling process, but without copying the whole address space.
+   The calling process is suspended until the new process exits or is
+   replaced by a call to `execve'.  Return -1 for errors, 0 to the new process,
+   and the process ID of the new process to the old process.  */
+          
+ENTRY (__vfork)
+
+    
+    dli a0, 0x4111 /* CLONE_VM | CLONE_VFORK | SIGCHLD */
+    add.d a1, zero, sp
+
+    /* Do the system call.  */
+    dli a7, __NR_clone
+    syscall 0
+          
+    blt a0, zero ,L (error)
+
+    ret   
+          
+L (error):
+    b   __syscall_error
+    END (__vfork)    
+
+libc_hidden_def (__vfork)
+          
+weak_alias (__vfork, vfork)
+strong_alias (__vfork, __libc_vfork)
-- 
2.20.1

