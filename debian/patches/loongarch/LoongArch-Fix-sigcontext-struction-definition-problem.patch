diff --git a/sysdeps/unix/sysv/linux/loongarch/bits/sigcontext.h b/sysdeps/unix/sysv/linux/loongarch/bits/sigcontext.h
index 90fa4d08..3ef4e092 100644
--- a/sysdeps/unix/sysv/linux/loongarch/bits/sigcontext.h
+++ b/sysdeps/unix/sysv/linux/loongarch/bits/sigcontext.h
@@ -10,8 +10,6 @@
 #ifndef _BITS_SIGCONTEXT_H
 #define _BITS_SIGCONTEXT_H
 
-#include <asm/sgidefs.h>
-
 /*
  * Keep this struct definition in sync with the sigcontext fragment
  * in arch/mips/kernel/asm-offsets.c
@@ -22,10 +20,9 @@
  * DSP ASE in 2.6.12-rc4.  Turn sc_mdhi and sc_mdlo into an array of four
  * entries, add sc_dsp and sc_reserved for padding.  No prisoners.
  */
-union fpureg {
-    unsigned int   sc_val32[256 / 32];
-    unsigned long long    sc_val64[256 / 64];
-};
+
+#define FPU_REG_WIDTH           256
+#define FPU_ALIGN               __attribute__((aligned(32)))
 
 struct sigcontext {
     unsigned long long   sc_pc;
@@ -35,9 +32,15 @@ struct sigcontext {
     unsigned int   sc_fcsr;
     unsigned int   sc_vcsr;
     unsigned long long    sc_fcc;
-    union fpureg    sc_fpregs[32] __attribute__((__aligned__ (32)));
 
-    unsigned int   sc_reserved;
+    unsigned long long    sc_scr[4];
+
+    union {
+                unsigned int        val32[FPU_REG_WIDTH / 32];
+                unsigned long long  val64[FPU_REG_WIDTH / 64];
+        } sc_fpregs[32] FPU_ALIGN;
+    unsigned char   sc_reserved[4096] __attribute__((__aligned__(16)));
+
 };
 
 
