From e20c09594e52a9e8344f58d56d90f58e4817fefb Mon Sep 17 00:00:00 2001
From: caiyinyu <caiyinyu@loongson.cn>
Date: Wed, 10 Feb 2021 15:00:09 +0800
Subject: [PATCH] add getpid vdso and getuid vdso

Change-Id: I622a64217de264247c37e960cdd3adf5bddbfe0d
---
 sysdeps/unix/sysv/linux/loongarch/getpid.c    | 54 +++++++++++++++++
 sysdeps/unix/sysv/linux/loongarch/getuid.c    | 60 +++++++++++++++++++
 .../unix/sysv/linux/loongarch/init-first.c    |  2 +-
 3 files changed, 115 insertions(+), 1 deletion(-)
 create mode 100644 sysdeps/unix/sysv/linux/loongarch/getpid.c
 create mode 100644 sysdeps/unix/sysv/linux/loongarch/getuid.c

diff --git a/sysdeps/unix/sysv/linux/loongarch/getpid.c b/sysdeps/unix/sysv/linux/loongarch/getpid.c
new file mode 100644
index 00000000..a92bdcb2
--- /dev/null
+++ b/sysdeps/unix/sysv/linux/loongarch/getpid.c
@@ -0,0 +1,54 @@
+/* getpid - get the pid.  Linux/Loongarch version.
+   Copyright (C) 2015-2018 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#include <unistd.h>
+
+#ifdef SHARED
+# include <dl-vdso.h>
+# include <errno.h>
+
+static pid_t
+__getpid_syscall (void)
+{
+  return INLINE_SYSCALL (getpid, 0);
+}
+
+# ifndef __getpid_type
+#  define __getpid_type __getpid
+# endif
+
+# undef INIT_ARCH
+# define INIT_ARCH() PREPARE_VERSION_KNOWN (linux26, LINUX_2_6)
+libc_ifunc_hidden (__getpid_type, __getpid, (_dl_vdso_vsym ("__vdso_getpid", &linux26) ?: &__getpid_syscall))
+libc_hidden_def (__getpid)
+
+#else
+
+# include <sysdep.h>
+# include <errno.h>
+
+pid_t
+__getpid (void)
+{
+  return INLINE_SYSCALL (getpid, 0);
+}
+lib_hidden_def (__getpid);
+
+#endif
+weak_alias (__getpid, getpid)
+libc_hidden_weak (getpid)
diff --git a/sysdeps/unix/sysv/linux/loongarch/getuid.c b/sysdeps/unix/sysv/linux/loongarch/getuid.c
new file mode 100644
index 00000000..4b3f95eb
--- /dev/null
+++ b/sysdeps/unix/sysv/linux/loongarch/getuid.c
@@ -0,0 +1,60 @@
+/* getuid - get the uid.  Linux/Loongarch version.
+   Copyright (C) 2015-2018 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#include <unistd.h>
+
+#ifdef SHARED
+
+# include <dl-vdso.h>
+# include <errno.h>
+
+libc_hidden_proto (getuid)
+
+extern __uid_t __getuid (void);
+libc_hidden_proto (__getuid)
+
+static uid_t
+__getuid_syscall(void)
+{
+  return INLINE_SYSCALL (getuid, 0);
+}
+
+# ifndef __getuid_type
+#  define __getuid_type __getuid
+# endif
+
+# undef INIT_ARCH
+# define INIT_ARCH() PREPARE_VERSION_KNOWN (linux26, LINUX_2_6)
+libc_ifunc_hidden (__getuid_type, __getuid, (_dl_vdso_vsym ("__vdso_getuid", &linux26) ?: &__getuid_syscall))
+libc_hidden_def (__getuid)
+
+#else
+
+# include <sysdep.h>
+# include <errno.h>
+
+uid_t
+__getuid(void)
+{
+  return INLINE_SYSCALL (getuid, 0);
+}
+libc_hidden_def (__getuid)
+
+#endif
+weak_alias (__getuid, getuid)
+libc_hidden_weak (getuid)
diff --git a/sysdeps/unix/sysv/linux/loongarch/init-first.c b/sysdeps/unix/sysv/linux/loongarch/init-first.c
index 56abe51d..4e8bbdbb 100644
--- a/sysdeps/unix/sysv/linux/loongarch/init-first.c
+++ b/sysdeps/unix/sysv/linux/loongarch/init-first.c
@@ -33,7 +33,7 @@ long int (*VDSO_SYMBOL (clock_getres)) (clockid_t, struct timespec *)
 static inline void
 _libc_vdso_platform_setup (void)
 {
-  PREPARE_VERSION_KNOWN (linux_version, LINUX_4_15);
+  PREPARE_VERSION_KNOWN (linux_version, LINUX_2_6);
 
   void *p = _dl_vdso_vsym ("__vdso_getcpu", &linux_version);
   PTR_MANGLE (p);
-- 
2.20.1

